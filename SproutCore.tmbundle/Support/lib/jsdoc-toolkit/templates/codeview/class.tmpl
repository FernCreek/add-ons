<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="content-type" content="text/html; charset={+IO.encoding+}" />
    <meta name="generator" content="JsDoc Toolkit" />
    {! Link.base = "../"; /* all generated links will be relative to this */ !}
    <title>JsDoc Reference - {+data.alias+}</title>

    <link rel="stylesheet" type="text/css" href="../css/all.css" media="all" />

    <script type="text/javascript" src="../javascript/wbos.CSSTools.MediaQueryFallBack.js"></script>
  </head>

  <body>
    {+include("static/header.html")+}

    <div class="index">
      <div class="menu">
        <!-- begin publish.classesIndex -->
        {+publish.classesIndex+}
        <!-- end publish.classesIndex -->
      </div>
    </div>
    <div class="index indexStatic"></div>

    <div class="content">
      <div class="innerContent">

  <!--
  #### CLASS INFO
  -->
        <div class="classDetails">
          <h1 class="classTitle">
            <span>{!
              var classType = "";

              if (data.isBuiltin()) {
                classType += "Built-In ";
              }

              if (data.isNamespace) {
                if (data.is('FUNCTION')) {
                  classType += "Function ";
                }
                classType += "Namespace ";
              } else {
                classType += "Class ";
              }
            !}
            {+classType+}{!
              var dataAlias = data.alias + "";
              dataAlias = dataAlias.replace(/\./g,  "<span class='break'> </span>.");
              output += dataAlias;
            !}</span>
          </h1>

          <if test="data.deprecated || data.since || data.exceptions.length || data.returns.length || data.requires.length || data.see.length">
            <table class="classDetailList">
              <tr>
              <if test="data.deprecated">
                <td colspan="2" class="deprecated" valign="top">
                  {+resolveLinks(data.deprecated)+}
                </td>
              </if>
              </tr>

              <tr>
              <if test="data.author">
                <td valign="top" class="heading">Author:</td>
                <td>{+ data.author +}</td>
              </if>
              </tr>

              <tr>
              <if test="data.version">
                <td valign="top" class="heading">Version:</td>
                <td>{+ data.version +}</td>
              </if>
              </tr>
              
              <tr>
              <if test="data.since">
                <td valign="top" class="heading">Since:</td>
                <td>{+ data.since +}</td>
              </if>
              </tr>

              <tr>
              <if test="data.requires.length">
                <td valign="top" class="heading">Requires:</td>
                <for each="item" in="data.requires">
                  <td>{+ resolveLinks(item) +}</td>
                </for>
              </if>
              </tr>

              <tr>
              <if test="data.augments.length">
                <td valign="top" class="heading">Extends:</td>
                <td>
                  {+
                    data.augments
                    .sort()
                    .map(
                      function($) { return new Link().toSymbol($); }
                    )
                    .join("<br>")
                  +}
                </td>
              </if>
              </tr>

              <tr>
              <if test="data.see.length">
                <td valign="top" class="heading">See:</td>
                <td>
                <for each="item" in="data.see">
                  {+ new Link().toSymbol(item) +}
                </for>
                </td>
              </if>
              </tr>
            </table>
          </if>
        </div>

  <!--
  #### CLASS SUMMARY
  -->

        <div class="props">
          <div class="sumaryTable">
            <div class="sectionHeader">Overview</div>
          </div>

          <div class="description summary">
            {+resolveLinks(data.classDesc)+}
          </div>
        </div>

  <!--
  #### PROPERTY SUMMARY
  -->

        <if test="data.properties.length">
          {! var ownProperties = data.properties.filter(function($){return $.memberOf == data.alias && !$.isNamespace}).sort(makeSortby("name")); !}
          <if test="ownProperties.length">
            <div class="props">
              <table class="summaryTable" cellspacing="0" summary="A summary of the properties documented in the class {+data.alias+}.">
                <div class="sectionHeader">Properties</div>

                <tbody>
                  <for each="member" in="ownProperties">
                    <tr>
                      <td class="nameDescription">
                        <div class="fixedFont">
                        <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>
                        </div>
                      </td>
                    </tr>
                  </for>
                </tbody>
              </table>
            </div>
          </if>
        </if>

  <!--
  #### METHODS SUMMARY
  -->
        <if test="data.methods.length">
          {! var ownMethods = data.methods.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
          <if test="ownMethods.length">
            <div class="props">
              <table class="summaryTable" cellspacing="0" summary="A summary of the methods documented in the class {+data.alias+}.">
                <div class="sectionHeader">Methods</div>

                <tbody>
                  <for each="member" in="ownMethods">
                    <tr>
                      <td class="nameDescription">
                        <div class="fixedFont"><if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if>{+new Link().toSymbol(member.alias).withText(member.name.replace(/\^\d+$/, ''))+}{+makeSignature(member.params)+}
                        </div>
                      </td>
                    </tr>
                  </for>
                </tbody>
              </table>
            </div>
          </if>
        </if>

  <!--
  #### PROPERTY DETAILS
  -->
        <if test="defined(ownProperties) && ownProperties.length">
          <div class="details props">
            <div class="innerProps">

              <div class="sectionHeader">Property Details</div>

              <for each="member" in="ownProperties">
                <a name="{+Link.symbolNameToLinkName(member)+}"></a>

                <div class="fixedFont heading">
                  <span class='lighter'>
                  {!
                    if (member.isPrivate) output += "&lt;private&gt; ";
                    if (member.isInner) output += "&lt;inner&gt; ";
                    if (member.isConstant) output += "&lt;constant&gt; ";
                  !}
                  </span>

                  <if test="member.type"><span class="propertyType light">{+new Link().toSymbol(member.type)+}</span></if>

                  <if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>
                </div>

                <div class="description">
                  {+resolveLinks(member.desc)+}

                  <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
                </div>

                <if test="member.example.length">
                  <for each="example" in="member.example">
                    <pre class="code">{+example+}</pre>
                  </for>
                </if>

                <if test="member.deprecated || member.since || member.see.length || member.defaultValue">
                  <dl class="detailList nomargin">

                    <if test="member.deprecated">
                      <dt class="heading">Deprecated:</dt>
                      <dt>
                        {+ resolveLinks(member.deprecated) +}
                      </dt>
                    </if>
                    <if test="member.since">
                      <dt class="heading">Since:</dt>
                      <dd>{+ member.since +}</dd>
                    </if>
                    <if test="member.see.length">
                      <dt class="heading">See:</dt>
                      <for each="item" in="member.see">
                        <dd>{+ new Link().toSymbol(item) +}</dd>
                      </for>
                    </if>
                    <if test="member.defaultValue">
                      <dt class="heading">Default Value:</dt>
                      <dd>
                        {+resolveLinks(member.defaultValue)+}
                      </dd>
                    </if>
                  </dl>
                </if>

                <if test="!$member_last"><div class="hr"></div></if>
              </for>
            </div>
          </div>
        </if>

  <!--
  #### METHOD DETAILS
  -->
        <if test="defined(ownMethods) && ownMethods.length">
          <div class="details props">
            <div class="innerProps">
              <div class="sectionHeader">Method Details </div>

              <for each="member" in="ownMethods">
                <a name="{+Link.symbolNameToLinkName(member)+}"></a>

                <!--
                #### METHOD INFO
                -->

                <div class="fixedFont heading">
                  <span class='lighter'>
                  {!
                    if (member.isPrivate) output += "&lt;private&gt; ";
                    if (member.isInner) output += "&lt;inner&gt; ";
                  !}
                  </span>

                  <if test="member.isStatic && member.memberOf != '_global_'"></if><b>{+member.name.replace(/\^\d+$/, '')+}</b>{+makeSignature(member.params)+}
                  <if test="member.deprecated"><span class="deprecated"> {+resolveLinks(member.deprecated)+}</span></if>
                </div>

                <!--
                #### METHOD DESCRIPTION
                -->

                <div class="description">
                  {+resolveLinks(member.desc)+}
                </div>

                <!--
                #### METHOD EXCEPTIONS
                -->

                <if test="member.exceptions.length">

                  <table class="detailList params methodParameters"><!-- 3 -->
                    <if test="member.params.length">
                      <tr class="detailList params">
                        <td class="heading" colspan="2">Throws:</td>
                      </tr>
                      <for each="item" in="member.exceptions">
                        <tr>
                          <td valign="top">
                            {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}
                          </td>
                          <td valign="top">
                            <b>{+item.name+}</b>
                            <b>{+item.desc+}</b>
                          </td>
                        <tr>
                      </for>
                    </if>
                  </table><!-- /3 -->
                </if>

                <!--
                #### METHOD PARAMETERS
                -->

                <if test="member.params.length">
                  <table class="detailList params methodParameters"><!-- 1 -->
                    <tr>
                      <td class="heading" colspan="3">Parameters:</td>
                    </tr>
                    <for each="item" in="member.params">
                      <tr>
                        <td valign="top" class="type">
                          {+((item.type)?"<span class=\"light fixedFont\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}
                        </td>
                        <td valign="top" class="name">
                          <b>{+item.name+}<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if></b>
                        </td>
                        <td valign="top" class="description">
                          {+resolveLinks(item.desc)+}
                        </td>
                      <tr>
                    </for>
                  </table><!-- /1 -->
                </if>

                <!--
                #### METHOD RETURN
                -->

                <if test="member.returns.length">
                  <table class="detailList params methodParameters"><!-- 2 -->

                    <if test="member.returns.length">
                      <tr>
                        <td class="heading" colspan="2">Returns:</td>
                      </tr>
                      <for each="item" in="member.returns">
                        <tr>
                          <td valign="top">
                              {+((item.type)?"<span class=\"light fixedFont\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}
                          </td>
                          <td valign="top">
                              {+resolveLinks(item.desc)+}
                          </td>
                        </tr>
                      </for>
                    </if>

                  </table><!-- /2 -->
                </if>

                <!--
                #### METHOD SEE-ALSO
                -->

                <if test="member.see.length">
                  <table class="detailList params methodParameters"><!-- 4 -->

                    <if test="member.see.length">
                      <tr>
                        <td class="heading">See Also:</td>
                      </tr>
                      <for each="item" in="member.see">
                        <tr>
                          <td>
                            {+ new Link().toSymbol(item) +}
                          </td>
                        </tr>
                      </for>
                    </if>

                  </table><!-- /4 -->
                </if>

                <if test="!$member_last"><div class="hr"></div></if>
              </for>
            </div>
          </div>
        </if>
      </div>

      <div class="fineprint" style="clear:both">
        <if test="JSDOC.opt.D.copyright">&copy;{+JSDOC.opt.D.copyright+}<br /></if>
        Generated by <a href="http://code.google.com/p/jsdoc-toolkit/" target="_blank">JsDoc Toolkit</a> {+JSDOC.VERSION+} on {+new Date()+}<br />
      </div>
    </div>

  </body>
</html>
